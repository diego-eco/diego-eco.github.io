dfs$c[j] <- dfs$y[j]*(1-s)
dfs$inv[j] <- s*dfs$y[j]
dfs$dk[j] <- delta*dfs$k[j]
dfs$Dk[j] <- dfs$inv[j] - delta*dfs$k[j]
}
# Imprimir la base creada
dfs
}
View(solow_matrix)
server <- function(input, output) {
library(tidyverse)
### Primer gráfica
output$primera <- renderPlot({
datos <- data.frame(matrix(0, nrow = 100, ncol = 7))
colnames(datos) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
datos$Periodo <- 1:100
# Parámetros reactivos
k = input$k
y = k^(input$alpha)
s = input$s
c = y - s*y
inv = s*y
delta = input$delta
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
datos$k[1] = k
datos$y[1] = y
datos$c[1] = c
datos$inv[1] = inv
datos$dk[1] = depre
datos$Dk[1] = cambiok
for (j in 2:100) {
datos$k[j] <- datos$k[j-1] + datos$Dk[j-1]
datos$y[j] <- datos$k[j]^(0.5)
datos$c[j] <- datos$y[j]*(1-s)
datos$inv[j] <- s*datos$y[j]
datos$dk[j] <- delta*datos$k[j]
datos$Dk[j] <- datos$inv[j] - delta*datos$k[j]
}
plot(datos$Periodo,datos$k,type = "o",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)")
abline(h=9, col="blue")
})
### Segunda gráfica
output$segunda <- renderPlot({
datos2 <- data.frame(matrix(0, nrow = 100, ncol = 7))
colnames(datos2) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
datos2$Periodo <- 1:100
# Parámetros reactivos
k = input$k
y = k^(input$alpha)
s = input$s
c = y - s*y
inv = s*y
delta = input$delta
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
datos2$k[1] = k
datos2$y[1] = y
datos2$c[1] = c
datos2$inv[1] = inv
datos2$dk[1] = depre
datos2$Dk[1] = cambiok
for (j in 2:100) {
datos2$k[j] <- datos2$k[j-1] + datos2$Dk[j-1]
datos2$y[j] <- datos2$k[j]^(0.5)
datos2$c[j] <- datos2$y[j]*(1-s)
datos2$inv[j] <- s*datos2$y[j]
datos2$dk[j] <- delta*datos2$k[j]
datos2$Dk[j] <- datos2$inv[j] - delta*datos2$k[j]
}
plot(datos2$Periodo,datos2$c,type = "o",main = "Trayectoria de Consumo (c)",
xlab="Periodo", ylab="Consumo (c)")
})
### Tercer gráfica
output$tercera <- renderPlot({
datos3 <- data.frame(matrix(0, nrow = 100, ncol = 7))
colnames(datos3) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
datos3$Periodo <- 1:100
# Parámetros reactivos
k = input$k
y = k^(input$alpha)
s = input$s
c = y - s*y
inv = s*y
delta = input$delta
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
datos3$k[1] = k
datos3$y[1] = y
datos3$c[1] = c
datos3$inv[1] = inv
datos3$dk[1] = depre
datos3$Dk[1] = cambiok
for (j in 2:100) {
datos3$k[j] <- datos3$k[j-1] + datos3$Dk[j-1]
datos3$y[j] <- datos3$k[j]^(0.5)
datos3$c[j] <- datos3$y[j]*(1-s)
datos3$inv[j] <- s*datos3$y[j]
datos3$dk[j] <- delta*datos3$k[j]
datos3$Dk[j] <- datos3$inv[j] - delta*datos3$k[j]
}
plot(datos3$Periodo,datos3$inv,type = "o",main = "Trayectoria de Inversión (I)",
xlab="Periodo", ylab="Inversión (I)")
})
### Cuarta gráfica
output$cuarta <- renderPlot({
datos4 <- data.frame(matrix(0, nrow = 100, ncol = 7))
colnames(datos4) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
datos4$Periodo <- 1:100
# Parámetros reactivos
k = input$k
y = k^(input$alpha)
s = input$s
c = y - s*y
inv = s*y
delta = input$delta
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
datos4$k[1] = k
datos4$y[1] = y
datos4$c[1] = c
datos4$inv[1] = inv
datos4$dk[1] = depre
datos4$Dk[1] = cambiok
for (j in 2:100) {
datos4$k[j] <- datos4$k[j-1] + datos4$Dk[j-1]
datos4$y[j] <- datos4$k[j]^(0.5)
datos4$c[j] <- datos4$y[j]*(1-s)
datos4$inv[j] <- s*datos4$y[j]
datos4$dk[j] <- delta*datos4$k[j]
datos4$Dk[j] <- datos4$inv[j] - delta*datos4$k[j]
}
plot(datos4$Periodo,datos4$y,type = "o",main = "Trayectoria del Producto (Y)",
xlab="Periodo", ylab="Producto (Y)")
})
### Matriz reactiva
data_solow <- reactive({
solow_matrix <- function(k=4, s=0.3, alpha=0.5, delta=0.1, n=100) {
df <- data.frame(matrix(0, nrow = n, ncol = 7))
colnames(df) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
df$Periodo <- 1:n
# Parámetros reactivos
k = input$k
y = k^(input$alpha)
s = input$s
c = y - s*y
inv = s*y
delta = input$delta
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
df$k[1] = k_0
df$y[1] = y
df$c[1] = c
df$inv[1] = inv
df$dk[1] = depre
df$Dk[1] = cambiok
# Iteramos
for (j in 2:n) {
df$k[j] <- df$k[j-1] + df$Dk[j-1]
df$y[j] <- df$k[j]^(0.5)
df$c[j] <- df$y[j]*(1-s)
df$inv[j] <- s*df$y[j]
df$dk[j] <- delta*df$k[j]
df$Dk[j] <- df$inv[j] - delta*df$k[j]
}
return(df)
}
})
}
solow_matrix <- function(k_0=4, s=0.3, alpha=0.5, delta=0.1, n=100) {
df <- data.frame(matrix(0, nrow = n, ncol = 7))
colnames(df) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
df$Periodo <- 1:n
# Parámetros
y = k_0^(0.5)
c = y - s*y
inv = s*y
depre = delta*k_0
cambiok = s*y - delta*k_0
# Los ponemos como 1a observación
df$k[1] = k_0
df$y[1] = y
df$c[1] = c
df$inv[1] = inv
df$dk[1] = depre
df$Dk[1] = cambiok
# Iteramos
for (j in 2:n) {
df$k[j] <- df$k[j-1] + df$Dk[j-1]
df$y[j] <- df$k[j]^(0.5)
df$c[j] <- df$y[j]*(1-s)
df$inv[j] <- s*df$y[j]
df$dk[j] <- delta*df$k[j]
df$Dk[j] <- df$inv[j] - delta*df$k[j]
}
return(df)
}
datos <- solow_matrix(k_0=4, s=0.3, alpha=0.5, delta=0.1, n=100)
View(datos)
datos <- solow_matrix(k_0=input$k, s=input$s, alpha=input$alpha, delta=input$delta, n=100)
plot(datos$Periodo,datos$k,type = "o",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)")
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
xx <- solow_matriz1(k_0 = 9, s = .3)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(tidyverse)
library(tidyverse)
datos <- data.frame(matrix(0, nrow = 100, ncol = 7))
colnames(datos) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
datos$Periodo <- 1:100
# Parámetros
k = 4
y = k^(0.5)
s = 0.3
c = y - s*y
inv = s*y
delta = 0.1
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
datos$k[1] = k
datos$y[1] = y
datos$c[1] = c
datos$inv[1] = inv
datos$dk[1] = depre
datos$Dk[1] = cambiok
for (j in 2:100) {
datos$k[j] <- datos$k[j-1] + datos$Dk[j-1]
datos$y[j] <- datos$k[j]^(0.5)
datos$c[j] <- datos$y[j]*(1-s)
datos$inv[j] <- s*datos$y[j]
datos$dk[j] <- delta*datos$k[j]
datos$Dk[j] <- datos$inv[j] - delta*datos$k[j]
}
plot(datos$Periodo,datos$k,type = "o",main = "Acumulación de capital (k)",
xlab="Perido", ylab="Capital (k)")
abline(h=9, col="blue")
datos2 <- data.frame(matrix(0, nrow = 100, ncol = 7))
colnames(datos2) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
datos2$Periodo <- 1:100
# Parámetros
k = 9
y = k^(0.5)
s = 0.7
c = y - s*y
inv = s*y
delta = 0.1
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
datos2$k[1] = k
datos2$y[1] = y
datos2$c[1] = c
datos2$inv[1] = inv
datos2$dk[1] = depre
datos2$Dk[1] = cambiok
for (j in 2:100) {
datos2$k[j] <- datos2$k[j-1] + datos2$Dk[j-1]
datos2$y[j] <- datos2$k[j]^(0.5)
datos2$c[j] <- datos2$y[j]*(1-s)
datos2$inv[j] <- s*datos2$y[j]
datos2$dk[j] <- delta*datos2$k[j]
datos2$Dk[j] <- datos2$inv[j] - delta*datos2$k[j]
}
datos2 %>% ggplot(aes(x=Periodo)) +
geom_point(aes(y=c))
solow_matriz1 <- function(k_0=4, s=0.3, alpha=0.5, delta=0.1, n=100) {
dfs <- data.frame(matrix(0, nrow = n, ncol = 7))
colnames(dfs) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
dfs$Periodo <- 1:n
# Parámetros
y = k_0^(0.5)
c = y - s*y
inv = s*y
depre = delta*k_0
cambiok = s*y - delta*k_0
# Los ponemos como 1a observación
dfs$k[1] = k_0
dfs$y[1] = y
dfs$c[1] = c
dfs$inv[1] = inv
dfs$dk[1] = depre
dfs$Dk[1] = cambiok
# Iteramos
for (j in 2:n) {
dfs$k[j] <- dfs$k[j-1] + dfs$Dk[j-1]
dfs$y[j] <- dfs$k[j]^(0.5)
dfs$c[j] <- dfs$y[j]*(1-s)
dfs$inv[j] <- s*dfs$y[j]
dfs$dk[j] <- delta*dfs$k[j]
dfs$Dk[j] <- dfs$inv[j] - delta*dfs$k[j]
}
# Imprimir la base creada
dfs
}
x <- solow_matriz1(k_0 = 25, s = .5)
y <- solow_matriz1(k_0 = 25, s = .7)
z <- rbind.data.frame(x[1:10,], y)
z$Periodo[1:110] <- 1:110
ggplot() +
geom_line(aes(Periodo, c, col="s=0.7"), data = z) +
geom_hline(yintercept = 2.5, linetype =2) +
theme_classic()
xx <- solow_matriz1(k_0 = 9, s = .3)
yy <- solow_matriz1(k_0 = 9, s = .45)
zz <- rbind.data.frame(xx[1:10,], yy)
zz$Periodo[1:110] <- 1:110
zz %>% ggplot(aes(Periodo)) +
geom_line(aes(y=c, col="Consumo")) +
geom_line(aes(y=inv, col="Inversión")) +
geom_line(aes(y=y, col="Producción")) +
geom_hline(yintercept = 2.1, linetype = 2) +
geom_vline(xintercept = 10, linetype = 2) +
theme_classic()
View(xx)
View(yy)
datos <- solow_matrix(k_0=input$k, s=input$s, alpha=input$alpha, delta=input$delta, n=100)
solow_matrix <- function(k_0=4, s=0.3, alpha=0.5, delta=0.1, n=100) {
df <- data.frame(matrix(0, nrow = n, ncol = 7))
colnames(df) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
df$Periodo <- 1:n
# Parámetros
y = k_0^alpha
c = y - s*y
inv = s*y
depre = delta*k_0
cambiok = s*y - delta*k_0
# Los ponemos como 1a observación (periodo)
df$k[1] = k_0
df$y[1] = y
df$c[1] = c
df$inv[1] = inv
df$dk[1] = depre
df$Dk[1] = cambiok
# Iteramos
for (j in 2:n) {
df$k[j] <- df$k[j-1] + df$Dk[j-1]
df$y[j] <- df$k[j]^(0.5)
df$c[j] <- df$y[j]*(1-s)
df$inv[j] <- s*df$y[j]
df$dk[j] <- delta*df$k[j]
df$Dk[j] <- df$inv[j] - delta*df$k[j]
}
return(df)
}
datos <- solow_matrix(k_0=input$k, s=input$s, alpha=input$alpha, delta=input$delta, n=100)
plot(datos$Periodo,datos$k,type = "o",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=2)
plot(datos$Periodo,datos$k,type = "l",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=2)
plot(datos$Periodo,datos$k,type = "l",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=3)
plot(datos$Periodo,datos$k,type = "l",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=3,col=1)
plot(datos$Periodo,datos$k,type = "l",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=3,col=1)
plot(datos$Periodo,datos$k,type = "l",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=3,col=2)
plot(datos$Periodo,datos$k,type = "l",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=3,col=3)
plot(datos2$Periodo,datos2$c,type = "l",main = "Trayectoria de Consumo (c)",
xlab="Periodo", ylab="Consumo (c)",lwd=3,col=3)
plot(datos3$Periodo,datos3$inv,type = "l",main = "Trayectoria de Inversión (I)",
xlab="Periodo", ylab="Inversión (I)",lwd=3,col=4)
datos3 <- solow_matrix(k_0=input$k, s=input$s, alpha=input$alpha, delta=input$delta, n=100)
plot(datos3$Periodo,datos3$inv,type = "l",main = "Trayectoria de Inversión (I)",
xlab="Periodo", ylab="Inversión (I)",lwd=3,col=4)
datos3 <- solow_matrix(k_0=input$k, s=input$s, alpha=input$alpha, delta=input$delta, n=100)
plot(datos$Periodo,datos$k,type = "l",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=3,col=4)
plot(datos$Periodo,datos$k,type = "l",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=3,col=5)
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
plot(datos$Periodo,datos$k,type = "l",main = "Trayectoria del Capital (K)",
xlab="Periodo", ylab="Capital (k)",lwd=3,col=6)
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
solow_matriz1 <- function(k_0=4, s=0.3, alpha=0.5, delta=0.1, n=100) {
dfs <- data.frame(matrix(0, nrow = n, ncol = 7))
colnames(dfs) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
dfs$Periodo <- 1:n
# Parámetros
y = k_0^(0.5)
c = y - s*y
inv = s*y
depre = delta*k_0
cambiok = s*y - delta*k_0
# Los ponemos como 1a observación
dfs$k[1] = k_0
dfs$y[1] = y
dfs$c[1] = c
dfs$inv[1] = inv
dfs$dk[1] = depre
dfs$Dk[1] = cambiok
# Iteramos
for (j in 2:n) {
dfs$k[j] <- dfs$k[j-1] + dfs$Dk[j-1]
dfs$y[j] <- dfs$k[j]^(0.5)
dfs$c[j] <- dfs$y[j]*(1-s)
dfs$inv[j] <- s*dfs$y[j]
dfs$dk[j] <- delta*dfs$k[j]
dfs$Dk[j] <- dfs$inv[j] - delta*dfs$k[j]
}
# Imprimir la base creada
dfs
}
runApp()
runApp()
runApp()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
xx <- solow_matriz1(k_0 = 9, s = .3)
yy <- solow_matriz1(k_0 = 9, s = .45)
zz <- rbind.data.frame(xx[1:10,], yy)
zz$Periodo[1:110] <- 1:110
zz %>% ggplot(aes(Periodo)) +
geom_line(aes(y=c, col="Consumo")) +
geom_line(aes(y=inv, col="Inversión")) +
geom_line(aes(y=y, col="Producción")) +
geom_hline(yintercept = 2.1, linetype = 2) +
geom_vline(xintercept = 10, linetype = 2) +
theme_classic()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
View(yy)
View(zz)
View(xx)
View(yy)
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
tags$h1
tags$h1("Hola")
runApp()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp()
runApp()
runApp()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp()
runApp('~/Desktop/Code/R Pro/Shiny/test_solow')
runApp()
runApp()
runApp()
runApp()
runApp()
