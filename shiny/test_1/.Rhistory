shiny::runApp()
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='diego-lopezt',
token='152BEFB269FBCA40D00857C71FA6E71E',
secret='<SECRET>')
rsconnect::setAccountInfo(name='diego-lopezt',
token='152BEFB269FBCA40D00857C71FA6E71E',
secret='<SECRET>')
library(rsconnect)
rsconnect
rsconnect::setAccountInfo(name='diego-lopezt',
token='152BEFB269FBCA40D00857C71FA6E71E',
secret='<SECRET>')
rsconnect::setAccountInfo(name='diego-lopezt',
token='152BEFB269FBCA40D00857C71FA6E71E',
secret='c25pxCiSz8wFXjrqpK3APOZpjicEPAk2hw9j8mRn')
runApp()
shiny::runApp()
datos <- data.frame(matrix(0, nrow = 100, ncol = 7))
colnames(datos) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
datos$Periodo <- 1:100
# Parámetros
k = 4
y = k^(0.5)
s = 0.3
c = y - s*y
inv = s*y
delta = 0.1
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
datos$k[1] = k
datos$y[1] = y
datos$c[1] = c
datos$inv[1] = inv
datos$dk[1] = depre
datos$Dk[1] = cambiok
for (j in 2:100) {
datos$k[j] <- datos$k[j-1] + datos$Dk[j-1]
datos$y[j] <- datos$k[j]^(0.5)
datos$c[j] <- datos$y[j]*(1-s)
datos$inv[j] <- s*datos$y[j]
datos$dk[j] <- delta*datos$k[j]
datos$Dk[j] <- datos$inv[j] - delta*datos$k[j]
}
View(datos)
datos %>% ggplot(aes(x=Periodo)) +
geom_point(aes(y=k)) +
geom_hline(yintercept = 9) +
theme_classic()
library(tidyverse)
datos %>% ggplot(aes(x=Periodo)) +
geom_point(aes(y=k)) +
geom_hline(yintercept = 9) +
theme_classic()
datos2 <- data.frame(matrix(0, nrow = 100, ncol = 7))
colnames(datos2) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
datos2$Periodo <- 1:100
# Parámetros
k = 9
y = k^(0.5)
s = 0.7
c = y - s*y
inv = s*y
delta = 0.1
depre = delta*k
cambiok = s*y - delta*k
# Los ponemos como 1a observación
datos2$k[1] = k
datos2$y[1] = y
datos2$c[1] = c
datos2$inv[1] = inv
datos2$dk[1] = depre
datos2$Dk[1] = cambiok
for (j in 2:100) {
datos2$k[j] <- datos2$k[j-1] + datos2$Dk[j-1]
datos2$y[j] <- datos2$k[j]^(0.5)
datos2$c[j] <- datos2$y[j]*(1-s)
datos2$inv[j] <- s*datos2$y[j]
datos2$dk[j] <- delta*datos2$k[j]
datos2$Dk[j] <- datos2$inv[j] - delta*datos2$k[j]
}
datos2 %>% ggplot(aes(x=Periodo)) +
geom_point(aes(y=c))
solow_matriz1 <- function(k_0=4, s=0.3, alpha=0.5, delta=0.1, n=100) {
dfs <- data.frame(matrix(0, nrow = n, ncol = 7))
colnames(dfs) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
dfs$Periodo <- 1:n
# Parámetros
y = k_0^(0.5)
c = y - s*y
inv = s*y
depre = delta*k_0
cambiok = s*y - delta*k_0
# Los ponemos como 1a observación
dfs$k[1] = k_0
dfs$y[1] = y
dfs$c[1] = c
dfs$inv[1] = inv
dfs$dk[1] = depre
dfs$Dk[1] = cambiok
# Iteramos
for (j in 2:n) {
dfs$k[j] <- dfs$k[j-1] + dfs$Dk[j-1]
dfs$y[j] <- dfs$k[j]^(0.5)
dfs$c[j] <- dfs$y[j]*(1-s)
dfs$inv[j] <- s*dfs$y[j]
dfs$dk[j] <- delta*dfs$k[j]
dfs$Dk[j] <- dfs$inv[j] - delta*dfs$k[j]
}
# Imprimir la base creada
dfs
}
x <- solow_matriz1(k_0 = 25, s = .5)
y <- solow_matriz1(k_0 = 25, s = .7)
z <- rbind.data.frame(x[1:10,], y)
z$Periodo[1:110] <- 1:110
ggplot() +
geom_line(aes(Periodo, c, col="s=0.7"), data = z) +
geom_hline(yintercept = 2.5, linetype =2) +
theme_classic()
xx <- solow_matriz1(k_0 = 9, s = .3)
yy <- solow_matriz1(k_0 = 9, s = .45)
zz <- rbind.data.frame(xx[1:10,], yy)
zz$Periodo[1:110] <- 1:110
zz %>% ggplot(aes(Periodo)) +
geom_line(aes(y=c, col="Consumo")) +
geom_line(aes(y=inv, col="Inversión")) +
geom_line(aes(y=y, col="Producción")) +
geom_hline(yintercept = 2.1, linetype = 2) +
geom_vline(xintercept = 10, linetype = 2) +
theme_classic()
solow_matriz2 <- function(k_0=4, s=0.3, alpha=0.5, A=1,
delta=0.1, n=0, g=0, obs=100) {
dfs <- data.frame(matrix(0, nrow = obs, ncol = 7))
colnames(dfs) <- c("Periodo","k", "y", "c", "inv", "dk", "Dk")
dfs$Periodo <- 1:obs
# Parámetros
y = k_0^(0.5)
c = y - s*y
inv = s*y
depre = delta*k_0
cambiok = s*y - (delta+n+g)*k_0
# Los ponemos como 1a observación
dfs$k[1] = k_0
dfs$y[1] = y
dfs$c[1] = c
dfs$inv[1] = inv
dfs$dk[1] = depre
dfs$Dk[1] = cambiok
# Iteramos
for (j in 2:obs) {
dfs$k[j] <- dfs$k[j-1] + dfs$Dk[j-1]
dfs$y[j] <- dfs$k[j]^(0.5)
dfs$c[j] <- dfs$y[j]*(1-s)
dfs$inv[j] <- s*dfs$y[j]
dfs$dk[j] <- delta*dfs$k[j]
dfs$Dk[j] <- dfs$inv[j] - (delta+n+g)*dfs$k[j]
}
# Imprimir la base creada
dfs
}
x <- solow_matriz2(k_0 = 4, s = 0.3, alpha = .5, A = 1,
delta = 0.1, n = 0, g = 0, obs = 100)
x <- solow_matriz2(k_0 = 4, s = 0.3, alpha = .5, A = 1,
delta = 0.1, n = 0, g = 0, obs = 100)
